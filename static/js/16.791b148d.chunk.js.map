{"version":3,"file":"static/js/16.791b148d.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.jsx","pages/Login.js","components/RegisterForm/RegisterForm.jsx","pages/Register.js"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { logIn, reset } from 'redux/auth/operations';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  // dispatch(reset());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    if (email === '' || password === '') {\n      dispatch(reset('All fields must be write in'));\n      return;\n    }\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    console.log('LoginFormReset');\n    form.reset();\n  };\n\n  console.log('LoginFormComponent ');\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      sx={{ display: 'flex', flexDirection: 'column' }}\n    >\n      <TextField type=\"email\" name=\"email\" label=\"Email\" sx={{ mb: '20px' }} />\n\n      <TextField\n        type=\"password\"\n        name=\"password\"\n        label=\"Password\"\n        sx={{ mb: '20px' }}\n      />\n\n      <Button type=\"submit\">Log In</Button>\n    </Box>\n  );\n};\n\nexport default LoginForm;\n","import { Typography, Alert } from '@mui/material';\nimport LoginForm from '../components/LoginForm';\nimport { CustomBox } from './Register';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reset } from 'redux/auth/operations';\nimport { useEffect } from 'react';\n\nexport default function Login() {\n  const dispatch = useDispatch();\n  const error = useSelector(state => state.auth.error);\n\n  useEffect(() => {\n    dispatch(reset());\n  }, [dispatch]);\n\n  if (error) {\n    setTimeout(() => {\n      dispatch(reset());\n    }, 5000);\n  }\n  console.log('LoginPage');\n  return (\n    <CustomBox>\n      {error && (\n        <Alert severity=\"info\" color=\"info\">\n          {error}\n        </Alert>\n      )}\n\n      <Typography variant=\"\" component=\"h2\" sx={{ mb: '15px' }}>\n        Login\n      </Typography>\n      <LoginForm />\n    </CustomBox>\n  );\n}\n","import { Box, Button, TextField } from '@mui/material';\n\nimport { useDispatch } from 'react-redux';\nimport { register, reset } from 'redux/auth/operations';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    if (name === '' || email === '' || password === '') {\n      dispatch(reset('All fields must be write in'));\n      return;\n    }\n    if (password.length < 7) {\n      dispatch(reset('Password must be at least 7 characters long'));\n      return;\n    }\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  console.log('RegisterFormComponent');\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      autoComplete=\"off\"\n      sx={{ display: 'flex', flexDirection: 'column' }}\n    >\n      <TextField label=\"Username\" type=\"text\" name=\"name\" sx={{ mb: '20px' }} />\n      <TextField label=\"Email\" type=\"email\" name=\"email\" sx={{ mb: '20px' }} />\n      <TextField\n        label=\"Password\"\n        type=\"password\"\n        name=\"password\"\n        sx={{ mb: '20px' }}\n      />\n      <Button type=\"submit\">Register</Button>\n    </Box>\n  );\n};\n\nexport default RegisterForm;\n\n// email: 'qwertyui@qwe.co';\n// name: 'qwertyui';\n// password: 'qwertyui123';\n\n// zxcvbn@mail.nd\n// zxcvbn123\n\n// dfghjkjh@bgh.liu\n// defrgth456\n\n// mail:  fbsdfbsbsdb@fdbf.etew\n// password:  dsvefgegvefgevbds\n\n// aggrehrgrehbs@mail.com\n// examplepwrd12345\n\n//  sdgsrahshrh@mail.com\n//  fnrfhbsdgeg\n//\n","import { Box, Typography, Alert } from '@mui/material';\nimport styled from '@emotion/styled';\nimport RegisterForm from '../components/RegisterForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { reset } from 'redux/auth/operations';\nimport { useEffect } from 'react';\n\nexport const CustomBox = styled(Box)`\n  max-width: 400px;\n  margin: 25px auto 0;\n  padding: 15px;\n  background-image: linear-gradient(\n    rgba(200, 200, 200, 0.7),\n    rgba(200, 200, 200, 0.7)\n  );\n  border-radius: 10px;\n`;\n\nexport default function Register() {\n  const error = useSelector(state => state.auth.error);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(reset());\n  }, [dispatch]);\n\n  if (error) {\n    setTimeout(() => {\n      dispatch(reset());\n    }, 5000);\n  }\n  console.log('RegisterPage');\n\n  return (\n    <CustomBox>\n      {error && (\n        <Alert severity=\"info\" color=\"info\">\n          {error}\n        </Alert>\n      )}\n      <Typography variant=\"\" component=\"h2\" sx={{ mb: '15px' }}>\n        Registration\n      </Typography>\n\n      <RegisterForm />\n    </CustomBox>\n  );\n}\n"],"names":["dispatch","useDispatch","console","log","Box","component","onSubmit","e","preventDefault","form","currentTarget","email","elements","value","password","logIn","reset","autoComplete","sx","display","flexDirection","TextField","type","name","label","mb","Button","Login","error","useSelector","state","auth","useEffect","setTimeout","CustomBox","Alert","severity","color","Typography","variant","length","register","styled","Register"],"sourceRoot":""}